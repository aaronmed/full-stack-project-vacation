scalar Date

type User {
	id: ID!,
	username: String,
	password: String,
	name: String,
	surname: String,
	dni: String,
	telephone: String
}

type Advert {
	id: ID!,
	description: String,
	address: String,
	published: Date,
	price: Float,
	guests: Int,
	bathrooms: Int,
	bedrooms: Int,
	beds: Int,
	user: Int
}

type Review {
	id: ID!,
	description: String,
	stars: Int,
	review: Date,
	advert: Int
}


type Book {
	id: ID!,
	user: Int,
	advert: Int,
	start: Date,
	end: Date
}

type Query {
	users: [User],
	user(id: ID): User,
	adverts: [Advert],
	advert(id: ID): Advert
	
}

type Mutation {
	createUser(username: String, password: String, name: String, surname: String, dni: String, telephone: String): User
	deleteUser(id: ID): Boolean
	updateUser(id: ID, username: String, password: String, name: String, surname: String, dni: String, telephone: String): User
	createAdvert(description: String, address: String, published: Date, price: Float, guests: Int, bathrooms: Int, bedrooms: Int, beds: Int, user: Int): Advert
	deleteAdvert(id: ID): Boolean
}
